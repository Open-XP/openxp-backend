# Define rate limiting zone
limit_req_zone $binary_remote_addr zone=mylimit:10m rate=10r/s;

# the upstream component nginx needs to connect to
upstream django {
    server 127.0.0.1:8000;
}

# configuration of the server
server {
    server_name openxp.study;
    charset utf-8;

    # max upload size
    client_max_body_size 75M;

    # Log suspicious requests to a separate log file
    access_log /var/log/nginx/suspicious_access.log suspicious_access;

    # Banned IPs file
    include /home/mannie/openxp-backend/banned_ips.conf;

    # Basic request filtering
    # Block requests with non-ASCII characters in the URL
    location / {
        if ($request_uri ~* "[^a-zA-Z0-9/_-]") {
            return 403;  # Block non-ASCII requests
        }

        # Block overly long requests
        set $req_length $request_uri$request_body;
        if ($req_length ~* "^.{4096,}$") {
            return 414;  # Request-URI Too Long
        }

        # Apply rate limiting
        limit_req zone=mylimit burst=20 nodelay;

        # Pass valid requests to Django application server
        uwsgi_pass django;
        include /home/mannie/openxp-backend/backend/uwsgi_params;

        # CORS headers
        add_header 'Access-Control-Allow-Origin' 'https://openxp.study' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PATCH, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
        add_header 'Access-Control-Expose-Headers' 'Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        # Handle preflight requests
        if ($request_method = OPTIONS) {
            return 204;  # No Content
        }
    }

    # Serve static files
    location /static/ {
        alias /home/mannie/openxp-backend/staticfiles/;
        access_log off;
        log_not_found off;
    }

    # Serve media files
    location /media/ {
        alias /home/mannie/openxp-backend/staticfiles/media/;
        access_log off;
        log_not_found off;
    }

    # Restrict access to directories and file types often targeted by bots
    location ~* /(admin|wp-admin|config|bin|inc|backup|private|logs|tmp)/ {
        access_log /var/log/nginx/suspicious_access.log suspicious_access;
        deny all;
    }

    # Restrict access to the Django admin interface
    location /ptpapa/ {
        allow 105.113.64.0/24;  # Allow access from your IP range
        deny all;  # Deny access to all other IPs

        uwsgi_pass django;
        include /home/mannie/openxp-backend/backend/uwsgi_params;
    }

    # Block access to certain file types
    location ~* \.(htaccess|htpasswd|ini|log|sh|php|pl|py|cgi)$ {
        access_log /var/log/nginx/suspicious_access.log suspicious_access;
        return 403;
    }

    # Block directory traversal attempts
    location ~* (\.\./|\.\./) {
        return 403;
    }

    # Serve manifest.json and openxp.png directly
    location = /manifest.json {
        alias /home/mannie/openxp-backend/staticfiles/manifest.json;
        allow all;
    }

    location = /openxp.png {
        alias /home/mannie/openxp-backend/staticfiles/openxp.png;
        allow all;
    }

    # Block access to hidden files (dotfiles)
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Restricting HTTP methods
    if ($request_method !~ ^(GET|POST|HEAD|OPTIONS|PATCH|DELETE|PUT)$ ) {
        return 405; # Method Not Allowed
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/openxp.study/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/openxp.study/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    # Add HSTS header
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Content Security Policy header
    add_header Content-Security-Policy "
    default-src 'self';
    script-src 'self' 'unsafe-inline' https://trusted-cdn.com;
    style-src 'self' 'unsafe-inline' https://trusted-cdn.com;
    img-src 'self' data:;
    font-src 'self' https://fonts.gstatic.com;
    object-src 'none';
    frame-ancestors 'self';
    base-uri 'self';
  " always;
}

# HTTP to HTTPS redirection
server {
    listen 80;
    server_name openxp.study;

    # Redirect all HTTP requests to HTTPS
    return 301 https://$host$request_uri;
}

